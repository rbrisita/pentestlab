#!/bin/bash

RED='\033[31m'
NC='\033[m'

ETC_HOSTS=/etc/hosts

PTL_IS_DOCKER_RUNNING=''
PTL_DOCKER_START=''
PTL_DOCKER_INSTALL_LINK=''
PTL_DOCKER_CMD=''
PTL_DOCKER_RUN_CONTAINER=''

fail() {
    printf '%s\n' "$1" >&2 ## Send message to stderr. Exclude >&2 if you don't want it that way.
    exit "${2-1}"          ## Return a code specified by $2 or 1 by default.
}

linuxIsDockerRunning() {
    sudo service docker status | grep inactive >/dev/null
}

linuxStartDocker() {
    sudo service docker start
}

darwinIsDockerMachineRunning() {
    docker-machine ip &>/dev/null
}

# Creates a new shell that the user is dropped into with correct Docker env.
darwinStartDockerToolbox() {
    echo -e "${RED}Please rerun $0 after Docker starts.${NC}"
    /Applications/Docker/Docker\ Quickstart\ Terminal.app/Contents/Resources/Scripts/./start.sh
}

# Docker might be run as a daemon

################
# OS Detection #
################
if [[ "$OSTYPE" == "linux-gnu" ]]; then
    # TODO: Test
    fail "$OSTYPE support W.I.P." 2

    # Linux
    PTL_IS_DOCKER_RUNNING=linuxIsDockerRunning
    PTL_DOCKER_START=linuxStartDocker
    PTL_DOCKER_CMD='sudo docker'
    # shellcheck disable=SC2016
    PTL_DOCKER_RUN_CONTAINER='"$PTL_DOCKER_CMD" run --name "$projectname" -d -p "$ip":80:"$port"'

    PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/install/linux/docker-ce/centos/'
    PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/install/linux/docker-ce/debian/'
    PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/install/linux/docker-ce/fedora/'
    PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/install/linux/docker-ce/ubuntu/'
elif [[ "$OSTYPE" == "darwin"* ]]; then
    # Mac OSX

    # Decide if Desktop Docker or Docker Toolbox
    # Hypervisor is CPU dependent
    hv_supported=$(sysctl -n kern.hv_support)
    if [ "$hv_supported" -ne 0 ]; then
        # TODO: Handle modern CPUs
        fail 'Hypervisor support W.I.P.' 2
        # For Desktop Docker > 10.10.3
        # /var/run/docker.sock - used by desktop docker
        # ${!DOCKER_*} - unset all DOCKER env variables
        PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/docker-for-mac/install/'
    else
        # For Docker Toolbox
        PTL_IS_DOCKER_RUNNING=darwinIsDockerMachineRunning
        PTL_DOCKER_START=darwinStartDockerToolbox
        PTL_DOCKER_CMD='docker'
        # shellcheck disable=SC2016
        PTL_DOCKER_RUN_CONTAINER='"$PTL_DOCKER_CMD" run --name "$projectname" -d -p "$port":"$port"'

        PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/toolbox/toolbox_install_mac/'
    fi
elif [[ "$OSTYPE" == "cygwin" ]]; then
    # TODO: Test
    fail "$OSTYPE support W.I.P." 2
    # POSIX compatibility layer and Linux environment emulation for Windows
    true
elif [[ "$OSTYPE" == "msys" ]]; then
    # TODO: Test
    fail "$OSTYPE support W.I.P." 2
    # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
    PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/docker-for-windows/install/'
    PTL_DOCKER_INSTALL_LINK='https://docs.docker.com/toolbox/toolbox_install_windows/'
    true
elif [[ "$OSTYPE" == "win32" ]]; then
    # TODO: Test
    fail "$OSTYPE support W.I.P." 2
    true
elif [[ "$OSTYPE" == "freebsd"* ]]; then
    # TODO: Test
    fail "$OSTYPE support W.I.P." 2
    true
else
    # TODO: Test
    fail "$OSTYPE support W.I.P." 2
    # Unknown.
    true
fi

############################################
# Check if docker is installed and running #
############################################
if ! [ -x "$(command -v docker)" ]; then
    echo
    echo "Docker was not found. Please install docker before running this script."
    echo "Please visit: 	$PTL_DOCKER_INSTALL_LINK"
    # TODO: Ask to install docker depending on $OSTYPE
    echo "You can try the script: 	install_docker_kali_x64.sh"
    echo "In the same repo at https://github.com/eystsen/pentestlab"
    exit
fi

if ! $PTL_IS_DOCKER_RUNNING; then
    echo "Docker is not running."
    read -n 1 -r -p "Do you want to start docker now (y/n)? " ans
    echo ''
    if [ "$ans" == 'y' ]; then
        $PTL_DOCKER_START
    else
        echo "Not starting. Script will not be able to run applications."
        exit 1
    fi
fi

#########################
# The command line help #
#########################
display_help() {
    echo "Local PentestLab Management Script (Docker based)"
    echo
    echo "Usage: $0 {list|status|info|start|stop} [projectname]" >&2
    echo
    echo " This scripts uses docker and hosts alias to make web apps available on localhost"
    echo
    echo " Ex."
    echo " $0 list"
    echo " 	List all available projects"
    echo " $0 status"
    echo "	Show status for all projects"
    echo " $0 start bwapp"
    echo " 	Start project and make it available on localhost"
    echo " $0 info bwapp"
    echo " 	Show information about bwapp proejct"
    echo
    echo " Dockerfiles from:"
    echo "  BodgeIt                - Simon Bennetts (psiinon/bodgeit)"
    echo "  DVWA                   - Ryan Dewhurst (vulnerables/web-dvwa)"
    echo "  Mutillidae II          - Nikolay Golub (citizenstig/nowasp)"
    echo "  bWapp                  - Rory McCune (raesene/bwapp)"
    echo "  Webgoat(s)             - OWASP Project"
    echo "  Juice Shop             - Bjoern Kimminich (bkimminich/juice-shop)"
    #    echo "  Security Sheperd       - OWASP Project (ismisepaul/securityshepherd)"
    echo "  Vulnerable Wordpress   - Custom made from github.com/wpscanteam/VulnerableWordpress"
    echo "  Security Ninjas        - OpenDNS Security Ninjas AppSec Training"
    echo "  Altoro Mutual          - Custom made from github.com/hclproducts/altoroj"

    exit 1
}

#########################
# List all pentest apps #
#########################
list() {
    echo "Available pentest applications" >&2
    echo "  bodgeit 		- The BodgeIt Store Java/MySQL based vulnerable web application"
    echo "  bwapp 		- bWAPP PHP/MySQL based from itsecgames.com"
    echo "  webgoat7		- WebGoat 7.1 OWASP Flagship Project"
    echo "  webgoat8		- WebGoat 8.0 OWASP Flagship Project"
    echo "  dvwa     		- Damn Vulnerable Web Application"
    echo "  mutillidae		- OWASP Mutillidae II"
    echo "  juiceshop		- OWASP Juice Shop"
    echo "  vulnerablewordpress	- WPScan Vulnerable Wordpress"
    echo "  securityninjas	- OpenDNS Security Ninjas"
    echo "  altoro		- Altoro Mutual Vulnerable Bank"
    #    echo "  securitysheperd	- OWASP Security Sheperd"
    echo
    exit 1

}

#########################
# Info dispatch         #
#########################
info() {
    case "$1" in
    bodgeit)
        project_info_bodgeit
        ;;
    bwapp)
        project_info_bwapp
        ;;
    webgoat7)
        project_info_webgoat7
        ;;
    webgoat8)
        project_info_webgoat8
        ;;
    dvwa)
        project_info_dvwa
        ;;
    mutillidae)
        project_info_mutillidae
        ;;
    juiceshop)
        project_info_juiceshop
        ;;
    vulnerablewordpress)
        project_info_vulnerablewordpress
        ;;
    securityninjas)
        project_info_securityninjas
        ;;
    altoro)
        project_info_altoro
        ;;
    *)
        echo "Unknown project name"
        list
        ;;
    esac
}

#########################
# hosts file util       #
#########################  # Based on https://gist.github.com/irazasyed/a7b0a079e7727a4315b9
function removehost() {
    if [ -n "$(grep $1 /etc/hosts)" ]; then
        echo "Removing $1 from $ETC_HOSTS"
        sudo sed -i".bak" "/$1/d" $ETC_HOSTS
    else
        echo "$1 was not found in your $ETC_HOSTS"
    fi
}

function addhost() { # ex.   127.5.0.1	bwapp
    HOSTS_LINE="$1\t$2"
    if [ -n "$(grep $2 /etc/hosts)" ]; then
        echo "$2 already exists in /etc/hosts"
    else
        echo "Adding $2 to your $ETC_HOSTS"
        sudo -- sh -c -e "echo '$HOSTS_LINE' >> /etc/hosts"

        if [ -n "$(grep $2 /etc/hosts)" ]; then
            echo -e "$HOSTS_LINE was added succesfully to /etc/hosts"
        else
            echo "Failed to Add $2, Try again!"
        fi
    fi
}

#########################
# PROJECT INFO & STARTUP#
#########################
project_info_bodgeit() {
    echo "https://github.com/psiinon/bodgeit"
}

project_startinfo_bodgeit() {
    echo "The BodgeIt Store is now available at http://bodgeit"
}

project_info_bwapp() {
    echo "http://www.itsecgames.com"
}

project_startinfo_bwapp() {
    echo "Remember to run install.php before using bwapp the first time."
    echo "at http://bwapp/install.php"
    echo "Default username/password:  bee/bug"
    echo "bWAPP will then be available at http://bwapp"
}

project_info_webgoat7() {
    echo "https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"
}

project_startinfo_webgoat7() {
    echo "WebGoat 7.1 now available at http://webgoat7/WebGoat"
}

project_info_webgoat8() {
    echo "  https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"
}

project_startinfo_webgoat8() {
    echo "WebGoat 8.0 now available at http://webgoat8/WebGoat"
}

project_info_dvwa() {
    echo "http://www.itsecgames.com"
}

project_startinfo_dvwa() {
    echo "Damn Vulnerable Web Application now available at http://dvwa"
    echo "Default username/password:   admin/password"
    echo "Remember to click on the CREATE DATABASE Button before you start"
}

project_info_mutillidae() {
    echo "https://www.owasp.org/index.php/OWASP_Mutillidae_2_Project"
}

project_startinfo_mutillidae() {
    echo "OWASP Mutillidae II now available at http://mutillidae"
    echo "Remember to click on the create database link before you start"
}

project_info_juiceshop() {
    echo "https://www.owasp.org/index.php/OWASP_Juice_Shop_Project"
}

project_startinfo_juiceshop() {
    echo "OWASP Juice Shop now available at http://juiceshop"
}

project_info_securitysheperd() {
    echo "https://www.owasp.org/index.php/OWASP_Security_Shepherd"
}

project_startinfo_securitysheperd() {
    echo "OWASP Security Sheperd now available at http://securitysheperd"
}

project_info_vulnerablewordpress() {
    echo "https://github.com/wpscanteam/VulnerableWordpress"
}

project_startinfo_vulnerablewordpress() {
    echo "WPScan Vulnerable Wordpress site now awailable at localhost on http://vulnerablewordpress"
}

project_info_securityninjas() {
    echo "https://github.com/opendns/Security_Ninjas_AppSec_Training"
}

project_startinfo_securityninjas() {
    echo "Open DNS Security Ninjas site now available at localhost on http://securityninjas"
}
project_info_altoro() {
    echo "https://github.com/opendns/Security_Ninjas_AppSec_Training"
}

project_startinfo_altoro() {
    echo "Altoro Mutual site now available at localhost on http://altoro"
    echo "Sign in with username jsmith and password demo1234 to initialize database."
    echo "Second known credential is admin/admin"
}

#########################
# Common start          #
#########################
project_start() {
    fullname=$1    # ex. WebGoat 7.1
    projectname=$2 # ex. webgoat7
    dockername=$3  # ex. raesene/bwapp
    ip=$4          # ex. 127.5.0.1
    port=$5        # ex. 80
    port2=$6       # optional second port binding
    docker_machine_ip=''

    echo "Starting $fullname"
    if [ -z "$DOCKER_MACHINE_NAME" ]; then
        addhost "$ip" "$projectname"
    else
        docker_machine_ip=$(docker-machine ip "$DOCKER_MACHINE_NAME")
        addhost "$docker_machine_ip" "$projectname"
    fi

    # Was there a prior container by the same name?
    if [ "$($PTL_DOCKER_CMD ps -aq -f name=$projectname)" ]; then
        echo "Running command: $PTL_DOCKER_CMD start $projectname"
        "$PTL_DOCKER_CMD" start "$projectname"
    else
        # Is a second port set?
        if [ -n "${6+set}" ]; then
            if [ -z "$docker_machine_ip" ]; then
                PTL_DOCKER_RUN_CONTAINER="$PTL_DOCKER_RUN_CONTAINER -p $ip:$port2:$port2"
            else
                PTL_DOCKER_RUN_CONTAINER="$PTL_DOCKER_RUN_CONTAINER -p $docker_machine_ip:$port2:$port2"
            fi
        fi

        eval echo "Running command: $PTL_DOCKER_RUN_CONTAINER $dockername"
        eval "$PTL_DOCKER_RUN_CONTAINER $dockername"
    fi
    echo "DONE!"
    echo
    # TODO: Project should output how it should be accessed
    if [ -z "$docker_machine_ip" ]; then
        echo "Docker mapped to http://$projectname or http://$ip"
    else
        echo "Docker mapped to http://$projectname or http://$docker_machine_ip:$port"
    fi
    echo
}

#########################
# Common stop           #
#########################
project_stop() {
    fullname=$1    # ex. WebGoat 7.1
    projectname=$2 # ex. webgoat7

    echo "Stopping... $fullname"
    echo "Running command: $PTL_DOCKER_CMD stop $projectname"
    "$PTL_DOCKER_CMD" stop "$projectname"
    removehost "$projectname"
}

project_status() {
    if [ "$($PTL_DOCKER_CMD ps -q -f name=bodgeit)" ]; then
        echo "bodgeit				running at http://bodgeit"
    else
        echo "bodgeit				not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=bwapp)" ]; then
        echo "bWaPP				running at http://bwapp"
    else
        echo "bWaPP				not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=webgoat7)" ]; then
        echo "WebGoat 7.1			running at http://webgoat7/WebGoat"
    else
        echo "WebGoat 7.1			not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=webgoat8)" ]; then
        echo "WebGoat 8.0			running at http://webgoat8/WebGoat"
    else
        echo "WebGoat 8.0			not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=dvwa)" ]; then
        echo "DVWA				running at http://dvwa"
    else
        echo "DVWA				not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=mutillidae)" ]; then
        echo "Mutillidae II			running at http://mutillidae"
    else
        echo "Mutillidae II			not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=juiceshop)" ]; then
        echo "OWASP Juice Shop 		running at http://juiceshop"
    else
        echo "OWASP Juice Shop 		not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=vulnerablewordpress)" ]; then
        echo "WPScan Vulnerable Wordpress 	running at http://vulnerablewordpress"
    else
        echo "WPScan Vulnerable Wordpress	not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=securityninjas)" ]; then
        echo "OpenDNS Security Ninjas 	running at http://securityninjas"
    else
        echo "OpenDNS Security Ninjas		not running"
    fi
    if [ "$($PTL_DOCKER_CMD ps -q -f name=altoro)" ]; then
        echo "Altoro Mutual			running at http://altoro"
    else
        echo "Altoro Mutual			not running"
    fi
    #  if [ "$($PTL_DOCKER_CMD ps -q -f name=securitysheperd)" ]; then
    #    echo "OWASP Security Sheperd		running at http://securitysheperd"
    #  else
    #    echo "OWASP Security Sheperd		not running"
    #  fi
}

project_start_dispatch() {
    case "$1" in
    bodgeit)
        project_start "The BodgeIt Store" "bodgeit" "psiinon/bodgeit" "127.4.0.1" "8080"
        project_startinfo_bodgeit
        ;;
    bwapp)
        project_start "bWAPP" "bwapp" "raesene/bwapp" "127.5.0.1" "80"
        project_startinfo_bwapp
        ;;
    webgoat7)
        project_start "WebGoat 7.1" "webgoat7" "webgoat/webgoat-7.1" "127.6.0.1" "8080"
        project_startinfo_webgoat7
        ;;
    webgoat8)
        project_start "WebGoat 8.0" "webgoat8" "webgoat/webgoat-8.0" "127.7.0.1" "8080"
        project_startinfo_webgoat8
        ;;
    dvwa)
        project_start "Damn Vulnerable Web Appliaction" "dvwa" "vulnerables/web-dvwa" "127.8.0.1" "80"
        project_startinfo_dvwa
        ;;
    mutillidae)
        project_start "Mutillidae II" "mutillidae" "citizenstig/nowasp" "127.9.0.1" "80"
        project_startinfo_mutillidae
        ;;
    juiceshop)
        project_start "OWASP Juice Shop" "juiceshop" "bkimminich/juice-shop" "127.10.0.1" "3000"
        project_startinfo_juiceshop
        ;;
    securitysheperd)
        project_start "OWASP Security Shepard" "securitysheperd" "ismisepaul/securityshepherd" "127.11.0.1" "80"
        project_startinfo_securitysheperd
        ;;
    vulnerablewordpress)
        project_start "WPScan Vulnerable Wordpress" "vulnerablewordpress" "eystsen/vulnerablewordpress" "127.12.0.1" "80" "3306"
        project_startinfo_vulnerablewordpress
        ;;
    securityninjas)
        project_start "Open DNS Security Ninjas" "securityninjas" "opendns/security-ninjas" "127.13.0.1" "80"
        project_startinfo_securityninjas
        ;;
    altoro)
        project_start "Altoro Mutual" "altoro" "eystsen/altoro" "127.14.0.1" "8080"
        project_startinfo_altoro
        ;;
    *)
        echo "ERROR: Project dispatch doesn't recognize the project name"
        ;;
    esac
}

project_stop_dispatch() {
    case "$1" in
    bodgeit)
        project_stop "The BodgeIt Store" "bodgeit"
        ;;
    bwapp)
        project_stop "bWAPP" "bwapp"
        ;;
    webgoat7)
        project_stop "WebGoat 7.1" "webgoat7"
        ;;
    webgoat8)
        project_stop "WebGoat 8.0" "webgoat8"
        ;;
    dvwa)
        project_stop "Damn Vulnerable Web Appliaction" "dvwa"
        ;;
    mutillidae)
        project_stop "Mutillidae II" "mutillidae"
        ;;
    juiceshop)
        project_stop "OWASP Juice Shop" "juiceshop"
        ;;
    securitysheperd)
        project_stop "OWASP Security Sheperd" "securitysheperd"
        ;;
    vulnerablewordpress)
        project_stop "WPScan Vulnerable Wordpress" "vulnerablewordpress"
        ;;
    securityninjas)
        project_stop "Open DNS Security Ninjas" "securityninjas"
        ;;
    altoro)
        project_stop "Altoro Mutual" "altoro"
        ;;
    *)
        echo "ERROR: Project dispatch doesn't recognize the project name"
        ;;
    esac
}

#########################
# Main switch case      #
#########################
case "$1" in
start)
    if [ -z "$2" ]; then
        echo "ERROR: Option start needs project name in lowercase"
        echo
        list # call list ()
        break
    fi
    project_start_dispatch $2
    ;;
stop)
    if [ -z "$2" ]; then
        echo "ERROR: Option stop needs project name in lowercase"
        echo
        list # call list ()
        break
    fi
    project_stop_dispatch $2
    ;;
list)
    list # call list ()
    ;;
status)
    project_status # call project_status ()
    ;;
info)
    if [ -z "$2" ]; then
        echo "ERROR: Option info needs project name in lowercase"
        echo
        list # call list ()
        break
    fi
    info $2
    ;;
*)
    display_help
    ;;
esac
